/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package thehotelfinder.frames;

import thehotelfinder.databaseutil.Hotel;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import thehotelfinder.MyDate;
import thehotelfinder.TheHotelFinder;

/**
 *
 * @author divakar
 */
public class HomePageFrame extends javax.swing.JFrame {

    /**
     * Creates new form HomePage
     */
    public HomePageFrame() {
        initComponents();
        
        scrollPane.setOpaque(false);
        scrollPane.getViewport().setOpaque(false);
        scrollPanePanel.setBackground(new Color(255,255,255,75));
        
        greetTextLabel.setText("Hello " + TheHotelFinder.getCurUser().getName());
        
        Calendar calendar = Calendar.getInstance(); // this would default to now
        calendar.add(Calendar.DAY_OF_MONTH, -1);
        checkInDateChooserCombo.setMinDate(calendar);
        Calendar calendar1 = Calendar.getInstance(); // this would default to now
        checkOutDateChooserCombo.setMinDate(calendar1);
        hotelCardList = new ArrayList();
        
        ArrayList waitingListRes = TheHotelFinder.getDb().checkWaitingList();
        if(!waitingListRes.isEmpty()){
            bookWaitingList(waitingListRes);
            System.out.println(waitingListRes.get(0) + " " + waitingListRes.get(1) + " " +
                               waitingListRes.get(2)+" " +waitingListRes.get(3)+" " +waitingListRes.get(4));
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homeOptionPane = new javax.swing.JOptionPane();
        HomePagePanel = new javax.swing.JPanel();
        line_separator = new javax.swing.JSeparator();
        locationLabel = new javax.swing.JLabel();
        greetTextLabel = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JButton();
        checkInDateLabel = new javax.swing.JLabel();
        checkOutDateLabel = new javax.swing.JLabel();
        noRoomsLabel = new javax.swing.JLabel();
        noPeopleLabel = new javax.swing.JLabel();
        noRoomsSpinner = new javax.swing.JSpinner();
        noPeopleSpinner = new javax.swing.JSpinner();
        checkInDateChooserCombo = new datechooser.beans.DateChooserCombo();
        checkOutDateChooserCombo = new datechooser.beans.DateChooserCombo();
        findHotelBtn = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        scrollPanePanel = new javax.swing.JPanel();
        cityComboBox = new javax.swing.JComboBox<>();
        bgImgLabel = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        myAccountMenu = new javax.swing.JMenu();
        profileMenuItem = new javax.swing.JMenuItem();
        bookingsMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The Hotel Finder");
        setBounds(new java.awt.Rectangle(510, 100, 0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(900, 800));
        getContentPane().setLayout(new java.awt.CardLayout());

        HomePagePanel.setBackground(new java.awt.Color(254, 249, 243));
        HomePagePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "The Hotel Finder", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lithos Pro Regular", 0, 24))); // NOI18N
        HomePagePanel.setPreferredSize(new java.awt.Dimension(900, 800));
        HomePagePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        line_separator.setPreferredSize(new java.awt.Dimension(900, 10));
        HomePagePanel.add(line_separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 66, 888, 1));

        locationLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 15)); // NOI18N
        locationLabel.setForeground(new java.awt.Color(51, 51, 51));
        locationLabel.setText("Location    :");
        HomePagePanel.add(locationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, 90, 20));

        greetTextLabel.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 16)); // NOI18N
        greetTextLabel.setForeground(new java.awt.Color(102, 102, 102));
        greetTextLabel.setText("Hello");
        HomePagePanel.add(greetTextLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        logoutBtn.setForeground(new java.awt.Color(51, 51, 51));
        logoutBtn.setText("LOGOUT");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });
        HomePagePanel.add(logoutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(787, 27, -1, -1));

        checkInDateLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 15)); // NOI18N
        checkInDateLabel.setForeground(new java.awt.Color(51, 51, 51));
        checkInDateLabel.setText("Check In Date     :");
        HomePagePanel.add(checkInDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, 130, 30));

        checkOutDateLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 15)); // NOI18N
        checkOutDateLabel.setForeground(new java.awt.Color(51, 51, 51));
        checkOutDateLabel.setText("Check Out Date  :");
        HomePagePanel.add(checkOutDateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 190, 130, 30));

        noRoomsLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 15)); // NOI18N
        noRoomsLabel.setForeground(new java.awt.Color(51, 51, 51));
        noRoomsLabel.setText("Number of Rooms  :");
        HomePagePanel.add(noRoomsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 150, 30));

        noPeopleLabel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 15)); // NOI18N
        noPeopleLabel.setForeground(new java.awt.Color(51, 51, 51));
        noPeopleLabel.setText("Number of People  :");
        HomePagePanel.add(noPeopleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 150, 30));

        noRoomsSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        HomePagePanel.add(noRoomsSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 40, 30));

        noPeopleSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        HomePagePanel.add(noPeopleSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, 40, 30));
        HomePagePanel.add(checkInDateChooserCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 140, -1, 30));

        checkOutDateChooserCombo.setNothingAllowed(false);
        HomePagePanel.add(checkOutDateChooserCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, -1, 30));

        findHotelBtn.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        findHotelBtn.setForeground(new java.awt.Color(51, 51, 51));
        findHotelBtn.setText("FIND HOTELS");
        findHotelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findHotelBtnActionPerformed(evt);
            }
        });
        HomePagePanel.add(findHotelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 240, -1, -1));

        scrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPane.setPreferredSize(new java.awt.Dimension(900, 552));

        scrollPanePanel.setLayout(new java.awt.GridLayout(10, 0, 10, 25));
        scrollPane.setViewportView(scrollPanePanel);

        HomePagePanel.add(scrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 900, 525));

        cityComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hyderabad", "New Delhi", "Kolkata", "Bangalore", "Mumbai" }));
        HomePagePanel.add(cityComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 100, 20));

        bgImgLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thehotelfinder/imgs/beach.jpg"))); // NOI18N
        bgImgLabel.setPreferredSize(new java.awt.Dimension(900, 700));
        HomePagePanel.add(bgImgLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 900, 520));

        getContentPane().add(HomePagePanel, "card2");

        myAccountMenu.setText("My Account ");

        profileMenuItem.setText("My Profile");
        profileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileMenuItemActionPerformed(evt);
            }
        });
        myAccountMenu.add(profileMenuItem);

        bookingsMenuItem.setText("My Bookings");
        bookingsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingsMenuItemActionPerformed(evt);
            }
        });
        myAccountMenu.add(bookingsMenuItem);

        jMenuBar.add(myAccountMenu);

        helpMenu.setText("Help");

        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        jMenuBar.add(helpMenu);

        setJMenuBar(jMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void bookWaitingList(ArrayList waitListRes){
        String username = (String) waitListRes.get(0);
        int noPeople = (int) waitListRes.get(1);
        String checkIn = (String) waitListRes.get(2);
        String checkOut = (String) waitListRes.get(3);
        String hotelName = (String) waitListRes.get(4);
        String question = "You were in waiting list for the Hotel "+hotelName+
                                      " Do you want to book the hotel?";
        int nsingle = 0;
        int ndouble = 0;
        
        int maxRooms[] = TheHotelFinder.getDb().getMaxRooms(hotelName, checkIn, checkOut);
        int noRoomsUser[] = new int[2];
        outer:for(int x=0; x<=maxRooms[0]; x++){
            for(int y=0; y<=maxRooms[1]; y++){
                if((x+2*y) >= noPeople){
                    noRoomsUser[0] = x;
                    noRoomsUser[1] = y;
                    break outer;
                }
            }
        }
        int nights = (int)((MyDate.toDate(checkOut).getTime()) - (MyDate.toDate(checkIn).getTime()))/(1000 * 60 * 60 * 24);

        int res = JOptionPane.showConfirmDialog(this, question ,"Confirm" ,JOptionPane.YES_NO_OPTION );
        
        Hotel hotel = TheHotelFinder.getDb().getHotelByName(hotelName);
        if(res==0){
            if(hotel!=null){
                new BookingFrame(hotel, noRoomsUser, noPeople, nights, MyDate.toDate(checkIn), MyDate.toDate(checkOut)).setVisible(true);
            }
        }
    }
    
    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        int n = JOptionPane.showConfirmDialog(this, "<html>Are you sure?<br>Do you want to logout?</html>", "Logout", JOptionPane.YES_NO_OPTION);
        if(n==1){
            return;
        }else if(n==0){
            setVisible(false);
            TheHotelFinder.setCurUser(null);
            TheHotelFinder.getLogRegFrame().clearFields();
            TheHotelFinder.getLogRegFrame().setVisible(true);
        }
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void findHotelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findHotelBtnActionPerformed
        // TODO add your handling code here:
       
        for(int i=0; i<hotelCardList.size(); i++){
            scrollPanePanel.remove((HotelCard)hotelCardList.get(i));
        }

        String location = cityComboBox.getItemAt(cityComboBox.getSelectedIndex());
        if(location.equals("Hyderabad")){
            bgImgLabel.setIcon(new ImageIcon(getClass().getResource("..\\imgs\\hyderabad.jpg")));
        }else if(location.equals("Bangalore")){
            bgImgLabel.setIcon(new ImageIcon(getClass().getResource("..\\imgs\\bangalore.jpg")));
        }else if(location.equals("Mumbai")){
            bgImgLabel.setIcon(new ImageIcon(getClass().getResource("..\\imgs\\mumbai.jpg")));
        }else if(location.equals("New Delhi")){
            bgImgLabel.setIcon(new ImageIcon(getClass().getResource("..\\imgs\\newdelhi.jpg")));
        }else if(location.equals("Kolkata")){
            bgImgLabel.setIcon(new ImageIcon(getClass().getResource("..\\imgs\\kolkata.jpg")));
        }
        int noRooms = (int) noRoomsSpinner.getValue();
        int noPeople = (int) noPeopleSpinner.getValue();
        String checkInDate = checkInDateChooserCombo.getText();
        String checkOutDate = checkOutDateChooserCombo.getText();
        
        if(validate(noRooms, noPeople, checkInDate, checkOutDate)){
//            int nights = (int)(((MyDate.toDate(checkOutDate).getTime()) - (MyDate.toDate(checkInDate).getTime()))/(1000 * 60 * 60 * 24));
            int nights = MyDate.getDays(checkInDate, checkOutDate);
//            System.out.println("\n nights: "+nights+"\n");
            hotelCardList = TheHotelFinder.getDb().getHotels(location, noRooms, noPeople, nights, MyDate.toDate(checkInDate),MyDate.toDate(checkOutDate));
        }else{
            return;
        }            
        
        //scrollPanePanel.setLayout(new GridLayout(hotelCardList.size(),1, 10, 25));
        
        System.out.println(location);
        //hotelCardList.add(new HotelCard(location));
        System.out.println("added");
        
        for(int i=0; i<hotelCardList.size(); i++){
           scrollPanePanel.add((HotelCard)hotelCardList.get(i));
        }

        ((JComponent)getContentPane()).revalidate();

    }//GEN-LAST:event_findHotelBtnActionPerformed

    private void profileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileMenuItemActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyProfileFrame().setVisible(true);
            }
        });
    }//GEN-LAST:event_profileMenuItemActionPerformed

    private void bookingsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingsMenuItemActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyBookingsFrame().setVisible(true);
            }
        });
    }//GEN-LAST:event_bookingsMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        // TODO add your handling code here:
        AboutFrame af = new AboutFrame();
        af.setVisible(true);
        
    }//GEN-LAST:event_aboutMenuItemActionPerformed
    
    
    public void showMessage(String msg){
        homeOptionPane.showMessageDialog(this, msg);
    }
     
    public boolean validate(int noRooms, int noPeople, String checkin, String checkout){
        Date curDate = new Date();
        
        if(checkin.isEmpty() || checkout.isEmpty()){
            showMessage("Please fill the empty fields.");
            return false;
        }
        
        Date checkInDate = MyDate.toDate(checkin);
        Date checkOutDate = MyDate.toDate(checkout);
        if(checkInDate.after(checkOutDate) || checkInDate.equals(checkOutDate)){
            System.out.println(checkInDate + "  " + checkOutDate + "  "  + curDate);
            showMessage("Please enter a valid date.");
            return false;
        }
        
        return true;
    }

    public void removeHotelCradList(ArrayList list){
        for(int i=0; i<hotelCardList.size(); i++){
            scrollPanePanel.remove((HotelCard)hotelCardList.get(i));
        }
    }
    
    private ArrayList hotelCardList;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HomePagePanel;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JLabel bgImgLabel;
    private javax.swing.JMenuItem bookingsMenuItem;
    private datechooser.beans.DateChooserCombo checkInDateChooserCombo;
    private javax.swing.JLabel checkInDateLabel;
    private datechooser.beans.DateChooserCombo checkOutDateChooserCombo;
    private javax.swing.JLabel checkOutDateLabel;
    private javax.swing.JComboBox<String> cityComboBox;
    private javax.swing.JButton findHotelBtn;
    private javax.swing.JLabel greetTextLabel;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JOptionPane homeOptionPane;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JSeparator line_separator;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JMenu myAccountMenu;
    private javax.swing.JLabel noPeopleLabel;
    private javax.swing.JSpinner noPeopleSpinner;
    private javax.swing.JLabel noRoomsLabel;
    private javax.swing.JSpinner noRoomsSpinner;
    private javax.swing.JMenuItem profileMenuItem;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JPanel scrollPanePanel;
    // End of variables declaration//GEN-END:variables
}
